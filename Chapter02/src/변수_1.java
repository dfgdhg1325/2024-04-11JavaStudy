/*
 * 여러줄 주석
 * 2page
 *     자바언어의 특징
 *      1) 프로그램 언어 실행하는 방식
 *         = 컴파일 방식 = 컴퓨터가 인식하는 언어로 변경 (2진파일 => 0,1)
 *         class MainClass
 *         {
 *             public static void main(String[] args){
 *            }
 *        }
 *        
 *        010010010
 *        001011001
 *        000110111
 *        
 *        'A' =>  65  1000001
 *        => 프로그램 언어 => 컴파일방식을 이용
 *          C/C++ , C# , Java
 *                         ㅣ
 *                         One Write      
 *      = 인터프리터 방식 : 한줄씩 번역해서 처리
 *      HTML / CSS
 *      = 컴파일 / 인터프리터를 동시에 사용 => 보안 (소스검증)
 *       ----------------
 *       ㅣ 제임스 고슬링 => 자바언어는 절대 보안 노출되지 않는다 
 *       
 *      자바소스 (.java)
 *       ㅣ
 *       JVM ==> .class 번역
 *       ㅣ
 *       ---------------------------
 *       ㅣ      ㅣ   ㅣ       ㅣ    ㅣ
 *       리눅스  유닉스 솔라리스  Mac   Windows => 동일한 실행 결과
 *       ================================================
 *       
 *       java ==> class
 *       
 *       ===> 실행 과정
 *       A.java 파일 만들기
 *         ㅣ javac
 *       A.class 생성
 *         ㅣ java
 *         실행 결과
 *         
 *         6page 개발환경 구축
 *         1) JDK => 17버전 => jdk17.0.2 => jdk.java.net/14
 *            *높은 버전에서는 실행 => 낮은 버전에서는 실행이 안된다
 *            *실무 : jdk1.8 (SUN의 마지막 버전) => 호환성이 좋다
 *            *Spring-boot : 17이상
 *            SpringFramework : 14이하 *****
 *            * 오픈소스를 이용 => 호환성 => 단점
 *          2) 환경설정
 *           => classpath : 라이브러리 읽기 => .;c:\jdk-17.0.2\lib
 *           => path      : 실행파일 등록 => c:\jdk-17.0.2\bin
 *           3) 11page => 편집기
 *                          ㅣ elcipse => eclipse.org => 최신
 *                          ㅣ 인텔리J
 *                           => fullStack 최근에 트라얼
 *           =프로젝트 폴더만들기
 *           = src에 자바 클래스 생성
 *           -------------------
 *           주의점)
 *                     1.파일명과 클래스명이 동일
 *                     2.대소문자를 구분
 *                     3. 명령문(CPU) => 끝나면 반드시 ;
 *                     4.클래스 영문외에 한글사용이 가능 -> 리눅스나 다른 운영체제에서는 한글 인식이 안될때도 있다
 *                         리눅스나 다른 운영체제에서는 한글 인식이 안될때도 있다(권장:영문)
 *                         --------------------------------------------------
 *                         = 문법은 아니고 약속 사항
 *                          1) 클래스명은 대문자로 시작
 *                             MainClass
 *                             -   -
 *                          2) 변수 : 소문자 시작
 *                                   id . password
 *                          3) 상수 : 모든 단어를 대문자로 한다
 *                                   OD . PASSWORD
 *                          4) 매소드 : 소문자 시작
 *                          
 *                       --------------------------------------------------------------------
 *                       모든 자바파일 실행시에는 반드시 main()
 *                                               --------- 실행 시작점 / 종료점
 *                       주석 : ctrl+shift+/
 *                             ctrl+shift+\
 *                             -------------
 *                       자바의 구성요소
 *                       class  className
 *                       {
 *                          public static void main(String[] arg) => 프로그램 시작점
 *                          {
 *                          
 *                          }
 *                        }
 *                        
 *                        --------------class----------
 *                        
 *                        형식)
 *                         데이터타입 변수명;
 *                         -------정수,실수,문자,논리
 *                         ------------------------------------------
 *                         정수형
 *                         byte => 1byte  (사용하는 범위 : -128~127)
 *                                 사용처 : 파일읽기 , 업로드 , 다운로드 ,네트워크 통신
 *                         int => 가장 많이 사용하는 정수형 (디폴트)
 *                                사용처 : 모든 프로그램의 정수형이 필요한 경우
 *                                => 4byte(사용범위 : -21억4천 ~ 21억 4천)
 *                         long => 데이터 수집 => 라이브러리가 제작
 *                                 금융권 / 증권 
 *                                 8byte ==> 2^63
 *                         bit = byte
 *                          => 0이나 1만 저장하는 공간 8it => 1byte
 *                          ---------------------- 음수/양수
 *                            ㅣ 음/양 ㅣ ㅣ ㅣ ㅣ ㅣ ㅣ ㅣ
 *                               1(음)
 *                               0(양)
 *                          ----------------------
 *                          11111111
 *                          01111111
 *                          --------------------------------------------
 *                          논리형 : boolean => true/false
 *                                  조건이 있는 경우에 주로 사용
 *                                  => 로그인 , 검색어 .... , 페이지
 *                                  boolean => 변수 설정
 *                                             blogin
 *                                             bCheck...
 *                                  1byte (0=false,1=true)
 *                                  사용법
 *                                  boolean bCheck=false
 *                                  
 *                           문자형 : char => 2byte (0~65535)
 *                                  문자는 양수로만 되어 있다
 *                                  => 표현하는 문자가 많이 있다
 *                                  => unicode : 각국의 언어를 사용할 수 있다
 *                                  => char는 문자 한개만 저장이 가능 => ''
 *                                     여러개 저장 => "" => char(X) , char배열 => String
 *                                     => char는 저장시에 해당 번호로 변경해서 저장
 *                                     'A' ==> 65
 *                                     'a' ==> 97
 *                                     '0' ==> 48 ASD코드
 *                                     => 사용법
 *                                       char fname='홍';
 *                                       char alpha='A';
 *                                       "A+" "A-"
 *                                      => char는 연산시에 정수형으로 변경된다
 *                                      'A'+1  => 66
 *                                      ---
 *                                      65
 *                                      
 *                                      "A"+1 ==> "A1"
 *                                      
 *                                      7+"7"+7+7
 *                                      ==> "7777" ==> 문자열 결합
 *                                      7+7+"7"+7
 *                                      ==> "1477"
 *                                      *** 정수 표현법
 *                                      10 , 20 ===> 10진법
 *                                      010 ==>
 *                                      --8진법 (앞에 0이 붙게되면 8진법)
 *                                      0x11
 *                                      -- 16진법
 *                                      0b1000
 *                                      -- 2진법 (0b라고 붙여야지 2진법)
 *                                      
 *                                         1010
 *                              실수형 : 소수점
 *                                     float => 4byte => 소수점 6자리
 *                                     double => 8byte => 소수점 15자리
 *                                     double => 실수형의 default 10.5
 *                                      => 10.5F(f)
 *                                                              
 */
public class 변수_1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println('A'+ 'B'); //char는 연산시에 무조건 정수형으로 처리
		System.out.println("A"+"B"); //AB
		System.out.println((int)'A');
		System.out.println((int)'a');
		float f=10.5F;
		double d=10.5;
		
		

	}

}
